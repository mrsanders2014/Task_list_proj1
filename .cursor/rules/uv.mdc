---
alwaysApply: true
# Package Management with `uv`

These rules define strict guidelines for managing Python dependencies in this project using the `uv` dependency manager.

**‚úÖ Use `uv` exclusively**

- All Python dependencies **must be installed, synchronized, and locked** using `uv`.
- Never use `pip`, `pip-tools`, or `poetry` directly for dependency management.

**üîÅ Managing Dependencies**

Always use these commands:

# ```bash
# Add or upgrade dependencies
- Install dependencies: 'uv add <package>'

# Remove dependencies
- Remove dependencies: 'uv remove <package>'

# Reinstall all dependencies from lock file
- Sync dependencies: 'uv sync'


**üîÅ Scripts**

#```bash
# Run script with proper dependencies
- Run a Python sfript with 'uv run script.py'
- Run Python tools like Pytest with `uv run pytest` or `uv run ruff`
- Launch a Python repl with `uv run python

You can edit inline-metadata manually:

# ```python
# /// script
# requires-python = ">=3.12"
# dependencies = [
# "torch",
# "torchvision",
# "opencv-python",
# "numpy",
# "matplotlib",
# "Pillow",
# "timm",
# ]
# ///

# print("some python code")
`# ``

Or using uv cli:

# ```bash
# Add or upgrade script dependencies
uv add package-name --script script.py

# Remove script dependencies
uv remove package-name --script script.py

# Reinstall all script dependencies from lock file
uv sync --script script.py
# ```
---
